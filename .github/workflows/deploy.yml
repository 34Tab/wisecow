name: Continuous Deployment to Kubernetes

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1  # AWS region for your ECR

    # Step 3: Login to AWS ECR
    - name: Login to ECR
      run: |
        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 490004613642.dkr.ecr.ap-south-1.amazonaws.com

    # Step 4: Build the Docker image
    - name: Build the Docker Image
      run: docker build -t wisecow-image:latest .

    # Step 5: Tag the Docker image with the ECR repository
    - name: Tag the Docker Image
      run: docker tag wisecow-image:latest 490004613642.dkr.ecr.ap-south-1.amazonaws.com/wisecow:latest

    # Step 6: Push the Docker image to AWS ECR
    - name: Push the Docker Image to ECR
      run: docker push 490004613642.dkr.ecr.ap-south-1.amazonaws.com/wisecow:latest

    # Step 7: Set up kubectl with decoded Kubeconfig
    - name: Set up kubectl
      run: |
        echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > $HOME/.kube/config

    # Step 8: Update the Kubernetes Deployment with the new Docker image
    - name: Update Kubernetes Deployment
      run: |
        IMAGE_TAG=490004613642.dkr.ecr.ap-south-1.amazonaws.com/wisecow:latest
        kubectl set image deployment/wisecow wisecow=$IMAGE_TAG --record

    # Step 9: Apply the updated Deployment (optional, to ensure the latest configuration is applied)
    - name: Apply the Deployment Config
      run: |
        kubectl apply -f wisecow-deployment.yaml

    # Step 10: Wait for the Kubernetes rollout to finish
    - name: Wait for deployment rollout to finish
      run: |
        kubectl rollout status deployment/wisecow --timeout=600s  # Wait for 10 minutes

    # Step 11: Get the status of the pods to verify everything is running
    - name: Get Kubernetes Pod Status
      run: |
        kubectl get pods -l app=wisecow

    # Optional: Clean up old pods if needed
    - name: Clean up old pods (force delete if needed)
      run: |
        kubectl delete pod -l app=wisecow --grace-period=0 --force
