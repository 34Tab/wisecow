name: Continuous Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: wisecow
  EKS_CLUSTER_NAME: simple-cluster
  DEPLOYMENT_NAME: wisecow
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.24.0'

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Install cert-manager
      run: |
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.12.0/cert-manager.yaml
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/instance=cert-manager -n cert-manager --timeout=300s

    - name: Deploy to EKS
      run: |
        # Update the image tag in deployment file
        sed -i 's|wisecow:latest|wisecow:'"$IMAGE_TAG"'|' wisecow-deployment.yaml
        
        # Apply the Kubernetes manifests
        kubectl apply -f cluster-issuer.yaml
        kubectl apply -f wisecow-service.yaml
        kubectl apply -f wisecow-deployment.yaml
        kubectl apply -f wisecow-ingress.yaml
        
        # Wait for deployment and certificate
        kubectl rollout status deployment/$DEPLOYMENT_NAME --timeout=300s
        kubectl wait --for=condition=ready certificate wisecow-tls --timeout=300s

    - name: Verify deployment
      run: |
        echo "Verifying deployment..."
        kubectl get pods -l app=wisecow
        kubectl get service wisecow
        kubectl get ingress wisecow-ingress
        kubectl get certificate wisecow-tls
